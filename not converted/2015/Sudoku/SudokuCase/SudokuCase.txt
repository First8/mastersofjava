1 Introduction

  Duke loves to play sudokus. However, he's not always certain whether he has finished the puzzle correctly. Therefore, he wants to create
  a sudoku validator, which will check his answers.

2 Assignment

  Create a sudoku validator. 
  
  A sudoku grid contains 9 columns and 9 rows, but is also divided in 9 boxes. Each box contains 9 cells in a 3x3 formation.
  For a sudoku to be valid the following rules must be met:
  * all fields have to be filled
  * each row contains the complete set of numbers from 1 to (including) 9
  * each column contains the complete set of numbers from 1 to (including) 9
  * each box contains all the number from 1 to (including) 9   

  A valid sudoku looks as following:
                ===================================
				|| 9, 2, 6 || 5, 4, 8 || 7, 1, 3 ||
				|| 5, 4, 1 || 6, 3, 7 || 2, 8, 9 ||
				|| 3, 7, 8 || 2, 9, 1 || 4, 5, 6 ||
				||=========||=========||=========||
				|| 8, 1, 5 || 4, 6, 3 || 9, 7, 2 ||
				|| 6, 9, 7 || 1, 5, 2 || 8, 3, 4 ||
				|| 4, 3, 2 || 8, 7, 9 || 5, 6, 1 ||
				||=========||=========||=========||
				|| 7, 5, 9 || 3, 2, 6 || 1, 4, 8 ||
				|| 2, 8, 3 || 7, 1, 4 || 6, 9, 5 ||
				|| 1, 6, 4 || 9, 8, 5 || 3, 2, 7 ||
				===================================

  The input for the validator will be given as a two-dimensional Integer array. which represents the sudoku grid.

  The validator will return true if the given sudoku grid is valid, false otherwise.

3 Example

  Exampl input: 
  
  Integer[][] expectedResult = { //
				{9, 2, 6, 5, 4, 8, 7, 1, 3}, //
				{5, 4, 1, 6, 3, 7, 2, 8, 9}, //
				{3, 7, 8, 2, 9, 1, 4, 5, 6}, //
				{8, 1, 5, 4, 6, 3, 9, 7, 2}, //
				{6, 9, 7, 1, 5, 2, 8, 3, 4}, //
				{4, 3, 2, 8, 7, 9, 5, 6, 1}, //
				{7, 5, 9, 3, 2, 6, 1, 4, 8}, //
				{2, 8, 3, 7, 1, 4, 6, 9, 5}, //
				{1, 6, 4, 9, 8, 5, 3, 2, 7} //
		};

4 Hints & Tips

  
