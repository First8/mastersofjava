import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

/**
 * Main class with RhymeAssistant functions. 
 */
public class RhymeAssistantImpl {
 	private static boolean isVowel(char c) {
        return VOWELS.contains(c);
    }
    private static final List<Character> VOWELS = Arrays.asList('A', 'E', 'U', 'I', 'O', 'Y');

    public static List<String> rhyme(String input) {
        List<String> list = Arrays.asList(input.split("\n"));

        List<String>  soundexs = toSoundex(list);
        List<String> rhymeScheme = toRhymeScheme(soundexs);
        return rhymeScheme;
    }

    private static List<String> toRhymeScheme(List<String> soundexs) {
        List<String> result  = new ArrayList<>(soundexs);
        char rhymeLetter = 'A';
        for (int i = 0; i < result.size(); i++) {
            if (result.contains(soundexs.get(i))) {
                Collections.replaceAll(result, soundexs.get(i), String.valueOf(rhymeLetter));
                rhymeLetter++;
            }
        }
        return result;
    }
  
    private static List<String> toSoundex(List<String> list) {
        List<String> result  = new ArrayList<>();

        for (String line : list) {
            //1. strip de eerste regel, haal alle niet belangrijke tekens weg.             
            String stripped = strip(line);
            
            //2. pak het laatste woord
            String lastWord = getLastWord(stripped);
            
            //3. pak hiervan de laatste klank
            String lastSyllable = getLastSyllable(lastWord);
            
            //4. maak hiervan de rijmklank           
            String soundEx = Soundex.US_ENGLISH.encode(lastSyllable);
            
            //5. voeg deze toe aan het rijmschema
            result.add(soundEx);
        }

        return result;
    }

    private static String getLastSyllable(String word) {
        int indexLastVowel = findLastVowel(word);
        while (indexLastVowel > 0 && isVowel(word.charAt(indexLastVowel -1))) {
            indexLastVowel--;
        }
        return word.substring(indexLastVowel);
    }

    private static int findLastVowel(String word) {
        for (int i = word.length(); i > 0; i--) {
            if (isVowel(word.charAt(i-1))) {
                return i;
            }
        }
        return 0;
    }

    private static String getLastWord(String stripped) {
        String[] words = stripped.split(" ");
        return words[words.length - 1];
    }

    private static String strip(String line) {
        return line.replaceAll("[^a-zA-Z ]", "").toUpperCase();
    }
}
